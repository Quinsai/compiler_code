FUNC_BEGIN fun1_V1 void_V2 null
BLOCK_BEGIN null null null
VAR_INT_DECLARE null null j_V3
VAR_INT_DECLARE null null k_V4
SET_VALUE k_V4 4 null
VAR_INT_DECLARE null null l_V6
SET_VALUE l_V6 6 null
SET_VALUE l_V6 k_V4 null
SET_VALUE j_V3 3 null
MOD j_V3 20 V10
MINU V10 1 V9
PLUS V9 9 V9
SET_VALUE j_V3 V9 null
VAR_INT_DECLARE null null i_V14
SET_VALUE i_V14 0 null
LABEL V16 null null
LITTLE_EQUAL i_V14 7 V19
BRANCH_IF_FALSE V19 V17 null
PLUS i_V14 1 V21
SET_VALUE i_V14 V21 null
EQUAL j_V3 i_V14 V23
BRANCH_IF_FALSE V23 V24 null
PLUS k_V4 j_V3 V25
SET_VALUE k_V4 V25 null
SKIP V18 null null
LABEL V24 null null
MINU j_V3 1 V26
SET_VALUE j_V3 V26 null
LABEL V18 null null
SKIP V16 null null
LABEL V17 null null
PRINT_STRING j : _V28 null null
PRINT_INT j_V3 null null
PRINT_STRING , k : _V29 null null
PRINT_INT k_V4 null null
PRINT_STRING , l : _V30 null null
PRINT_INT l_V6 null null
PRINT_STRING \n_V31 null null
BLOCK_END null null null
FUNC_END fun1_V1 null null
FUNC_BEGIN fun2_V32 int_V33 null
FORMAL_PARA_INT a_V35 null 1
BLOCK_BEGIN null null null
VAR_INT_DECLARE null null b_V36
SET_VALUE b_V36 1 null
VAR_INT_DECLARE null null num_V38
SET_VALUE num_V38 1 null
LABEL V40 null null
GREAT_EQUAL a_V35 1 V43
BRANCH_IF_FALSE V43 V41 null
MULT b_V36 a_V35 V45
SET_VALUE b_V36 V45 null
MINU a_V35 1 V46
SET_VALUE a_V35 V46 null
EQUAL a_V35 1 V48
BRANCH_IF_FALSE V48 V51 null
SKIP V41 null null
SKIP V50 null null
LABEL V51 null null
NOT_EQUAL a_V35 1 V52
BRANCH_IF_FALSE V52 V54 null
PLUS num_V38 1 V55
SET_VALUE num_V38 V55 null
LABEL V54 null null
LABEL V50 null null
LABEL V42 null null
SKIP V40 null null
LABEL V41 null null
PRINT_STRING a! = _V57 null null
PRINT_INT b_V36 null null
PRINT_STRING , num = _V58 null null
PRINT_INT num_V38 null null
PRINT_STRING \n_V59 null null
RETURN fun2_V32 1 null
BLOCK_END null null null
FUNC_END fun2_V32 null null
FUNC_BEGIN fun3_V61 int_V62 null
FORMAL_PARA_INT a_V64 null 1
FORMAL_PARA_INT b_V66 null 2
BLOCK_BEGIN null null null
GREAT a_V64 b_V66 V67
BRANCH_IF_FALSE V67 V69 null
RETURN fun3_V61 a_V64 null
SKIP V68 null null
LABEL V69 null null
LITTLE a_V64 b_V66 V70
BRANCH_IF_FALSE V70 V71 null
RETURN fun3_V61 b_V66 null
LABEL V71 null null
LABEL V68 null null
RETURN fun3_V61 a_V64 null
BLOCK_END null null null
FUNC_END fun3_V61 null null
FUNC_BEGIN gcd_V72 int_V73 null
FORMAL_PARA_INT a_V75 null 1
FORMAL_PARA_INT b_V77 null 2
BLOCK_BEGIN null null null
MOD a_V75 b_V77 V79
EQUAL V79 0 V78
BRANCH_IF_FALSE V78 V81 null
RETURN gcd_V72 b_V77 null
LABEL V81 null null
FUNC_CALL_BEGIN gcd_V72 null V82
REAL_PARA b_V77 1 null
MOD a_V75 b_V77 V84
REAL_PARA V84 2 null
FUNC_CALL_END gcd_V72 null V82
RETURN gcd_V72 V82 null
BLOCK_END null null null
FUNC_END gcd_V72 null null
FUNC_BEGIN lcm_V86 int_V87 null
FORMAL_PARA_INT a_V89 null 1
FORMAL_PARA_INT b_V91 null 2
BLOCK_BEGIN null null null
VAR_INT_DECLARE null null gcds_V92
FUNC_CALL_BEGIN gcd_V72 null V93
REAL_PARA a_V89 1 null
REAL_PARA b_V91 2 null
FUNC_CALL_END gcd_V72 null V93
SET_VALUE gcds_V92 V93 null
MULT a_V89 b_V91 V96
DIV V96 gcds_V92 V96
RETURN lcm_V86 V96 null
BLOCK_END null null null
FUNC_END lcm_V86 null null
FUNC_BEGIN fun4_V97 void_V98 null
FORMAL_PARA_INT a_V100 null 1
FORMAL_PARA_INT b_V102 null 2
FORMAL_PARA_INT c_V104 null 3
BLOCK_BEGIN null null null
VAR_INT_DECLARE null null d_V105
PLUS a_V100 b_V102 V107
MINU V107 c_V104 V107
MULT V107 a_V100 V106
SET_VALUE d_V105 V106 null
PRINT_INT d_V105 null null
PRINT_STRING \n_V108 null null
BLOCK_END null null null
FUNC_END fun4_V97 null null
FUNC_BEGIN fun5_V109 int_V110 null
FORMAL_PARA_INT a_V112 null 1
BLOCK_BEGIN null null null
EQUAL a_V112 1 V113
BRANCH_IF_FALSE V113 V116 null
RETURN fun5_V109 1 null
SKIP V115 null null
LABEL V116 null null
EQUAL a_V112 2 V118
BRANCH_IF_FALSE V118 V120 null
RETURN fun5_V109 1 null
LABEL V120 null null
LABEL V115 null null
FUNC_CALL_BEGIN fun5_V109 null V123
MINU a_V112 1 V124
REAL_PARA V124 1 null
FUNC_CALL_END fun5_V109 null V123
FUNC_CALL_BEGIN fun5_V109 null V127
MINU a_V112 2 V128
REAL_PARA V128 1 null
FUNC_CALL_END fun5_V109 null V127
PLUS V123 V127 V122
RETURN fun5_V109 V122 null
BLOCK_END null null null
FUNC_END fun5_V109 null null
MAIN_FUNC_BEGIN null null null
BLOCK_BEGIN null null null
FUNC_CALL_BEGIN fun1_V1 null null
FUNC_CALL_END fun1_V1 null null
FUNC_CALL_BEGIN fun2_V32 null V133
REAL_PARA 6 1 null
FUNC_CALL_END fun2_V32 null V133
FUNC_CALL_BEGIN fun3_V61 null V136
REAL_PARA 2 1 null
FUNC_CALL_BEGIN fun3_V61 null V139
REAL_PARA 3 1 null
REAL_PARA 6 2 null
FUNC_CALL_END fun3_V61 null V139
REAL_PARA V139 2 null
FUNC_CALL_END fun3_V61 null V136
PRINT_INT V136 null null
PRINT_STRING \n_V145 null null
VAR_INT_DECLARE null null a_V146
VAR_INT_DECLARE null null b_V147
PRINT_STRING scanf a, b to get gcd and lcm\n_V148 null null
GETINT a_V146 null null
GETINT b_V147 null null
PRINT_STRING gcd is _V149 null null
FUNC_CALL_BEGIN gcd_V72 null V150
REAL_PARA a_V146 1 null
REAL_PARA b_V147 2 null
FUNC_CALL_END gcd_V72 null V150
PRINT_INT V150 null null
PRINT_STRING \n_V153 null null
PRINT_STRING lcm is _V154 null null
FUNC_CALL_BEGIN lcm_V86 null V155
REAL_PARA a_V146 1 null
REAL_PARA b_V147 2 null
FUNC_CALL_END lcm_V86 null V155
PRINT_INT V155 null null
PRINT_STRING \n_V158 null null
VAR_INT_DECLARE null null temp_V159
GETINT temp_V159 null null
FUNC_CALL_BEGIN fun4_V97 null null
REAL_PARA temp_V159 1 null
REAL_PARA 3 2 null
REAL_PARA 10 3 null
FUNC_CALL_END fun4_V97 null null
PRINT_STRING scanf a to get Fibonacci\n_V166 null null
VAR_INT_DECLARE null null fib_V167
GETINT fib_V167 null null
PRINT_STRING fib is _V168 null null
FUNC_CALL_BEGIN fun5_V109 null V169
REAL_PARA fib_V167 1 null
FUNC_CALL_END fun5_V109 null V169
PRINT_INT V169 null null
PRINT_STRING \n_V171 null null
RETURN main_V131 0 null
BLOCK_END null null null
MAIN_FUNC_END null null null
